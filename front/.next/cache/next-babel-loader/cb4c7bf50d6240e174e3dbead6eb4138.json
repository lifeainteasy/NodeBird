{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, LOG_IN_SUCCESS } from '../reducers/user';\nvar HELLO_SAGA = \"helloSaga\";\n\nfunction loginAPI() {//서버에 요청을 보내는 부분\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          Console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take;\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchSignUp() {}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchLogin(), watchSignUp()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/sagas/user.js"],"names":["login","watchLogin","userSaga","all","fork","call","put","take","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","type","Console","error","LOG_IN_FAILURE","watchSignUp"],"mappings":";;;;yBAYUA,K;;;yBAgBAC,U;;;yBAaeC,Q;;AAzCzB,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,GAAtB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,cAAvB,QAA4C,kBAA5C;AAEA,IAAMC,UAAU,GAAI,WAApB;;AAGA,SAASC,QAAT,GACA,CACI;AACH;;AAGD,SAAUZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMK,IAAI,CAACO,QAAD,CAAV;;AAHR;AAAA;AAIQ,iBAAMN,GAAG,CAAC;AACNO,YAAAA,IAAI,EAAEH;AADA,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQI,UAAAA,OAAO,CAACC,KAAR;AATR;AAUQ,iBAAMT,GAAG,CAAC;AACNO,YAAAA,IAAI,EAAEG;AADA,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUf,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMM,IAAN;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAASU,WAAT,GACA,CAEC;;AAKD,eAAe,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV,iBAAMC,GAAG,CAAC,CAENF,UAAU,EAFJ,EAGNgB,WAAW,EAHL,CAAD,CAAT;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,fork,call,put,take,} from 'redux-saga/effects';\r\nimport {LOG_IN,LOG_OUT,LOG_IN_SUCCESS} from '../reducers/user';\r\n\r\nconst HELLO_SAGA  = \"helloSaga\";\r\n\r\n\r\nfunction loginAPI()\r\n{\r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e)\r\n    {\r\n        Console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin()\r\n{\r\n    yield take\r\n}\r\n\r\nfunction watchSignUp()\r\n{\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga()\r\n{\r\n     yield all([\r\n       \r\n         watchLogin(),\r\n         watchSignUp(),\r\n     ]);\r\n}"]},"metadata":{},"sourceType":"module"}