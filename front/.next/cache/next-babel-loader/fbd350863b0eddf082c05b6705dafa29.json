{"ast":null,"code":"import { all, fork, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, LOG_IN_SUCCESS } from '../reducers/user';\nconst HELLO_SAGA = \"helloSaga\";\n\nfunction loginAPI() {//서버에 요청을 보내는 부분\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    Console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nfunction watchSignUp() {}\n\nfunction* helloSaga() {\n  console.log(\"before saga\");\n\n  while (1) {\n    yield take(HELLO_SAGA);\n    console.log(\"hello saga\");\n  }\n}\n\nexport default function* useSaga() {\n  yield all([watchLogin(), watchSignUp()]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/sagas/user.js"],"names":["all","fork","call","put","take","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","login","type","e","Console","error","LOG_IN_FAILURE","watchLogin","takeLatest","watchSignUp","helloSaga","console","log","useSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,GAAtB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,cAAvB,QAA4C,kBAA5C;AAEA,MAAMC,UAAU,GAAI,WAApB;;AAGA,SAASC,QAAT,GACA,CACI;AACH;;AAGD,UAAUC,KAAV,GACA;AACI,MAAG;AACC,UAAMR,IAAI,CAACO,QAAD,CAAV;AACA,UAAMN,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMK,CAAN,EACF;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEI;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUC,UAAV,GACA;AACI,QAAMC,UAAU,CAACZ,MAAD,EAAQK,KAAR,CAAhB;AACH;;AAED,SAASQ,WAAT,GACA,CAEC;;AACD,UAAUC,SAAV,GACA;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,SAAM,CAAN,EACA;AACI,UAAMjB,IAAI,CAACI,UAAD,CAAV;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AAGJ;;AAGD,eAAe,UAAUC,OAAV,GACf;AACK,QAAMtB,GAAG,CAAC,CACNgB,UAAU,EADJ,EAENE,WAAW,EAFL,CAAD,CAAT;AAIJ","sourcesContent":["import {all,fork,call,put,take,} from 'redux-saga/effects';\r\nimport {LOG_IN,LOG_OUT,LOG_IN_SUCCESS} from '../reducers/user';\r\n\r\nconst HELLO_SAGA  = \"helloSaga\";\r\n\r\n\r\nfunction loginAPI()\r\n{\r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e)\r\n    {\r\n        Console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin()\r\n{\r\n    yield takeLatest(LOG_IN,login);\r\n}\r\n\r\nfunction watchSignUp()\r\n{\r\n\r\n}\r\nfunction* helloSaga()\r\n{\r\n    console.log(\"before saga\");\r\n    while(1)\r\n    {\r\n        yield take(HELLO_SAGA);\r\n        console.log(\"hello saga\");\r\n    }\r\n   \r\n\r\n}\r\n\r\n\r\nexport default function* useSaga()\r\n{\r\n     yield all([\r\n         watchLogin(),\r\n         watchSignUp(),\r\n     ]);\r\n}"]},"metadata":{},"sourceType":"module"}