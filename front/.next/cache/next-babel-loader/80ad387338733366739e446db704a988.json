{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NodeBird\\\\ch1\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Input, Form, Button, Card, Icon, Avatar } from 'antd';\nimport { ADD_POST_REQUEST } from '../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePath,\n    isAddingPost\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onSubmitForm = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      marginBottom: 20\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    style: {\n      marginTop: 20\n    },\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    isLoading: isAddingPost,\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, imagePath.map((v, i) => {\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'https://localhost:3000/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/components/PostForm.js"],"names":["React","useCallback","useState","Input","Form","Button","Card","Icon","Avatar","ADD_POST_REQUEST","useSelector","useDispatch","PostForm","dispatch","imagePath","isAddingPost","state","post","text","setText","onSubmitForm","type","data","onChangeText","e","target","value","marginBottom","marginTop","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React , {useCallback, useState}from 'react';\r\nimport { Input , Form, Button, Card, Icon, Avatar} from 'antd';\r\nimport {ADD_POST_REQUEST} from '../reducers/post'\r\nimport{useSelector, useDispatch} from 'react-redux';\r\nconst PostForm = () =>\r\n{\r\n    const dispatch = useDispatch();\r\n    const {imagePath, isAddingPost} = useSelector(state=>state.post);\r\n    const [text,setText] = useState('')\r\n    const onSubmitForm = useCallback(\r\n        () => {\r\n            dispatch({\r\n                type: ADD_POST_REQUEST,\r\n                data:\r\n                {\r\n                    text,\r\n                },\r\n            });\r\n            \r\n        },\r\n        [text],\r\n    )\r\n    const onChangeText = useCallback(\r\n        (e) => {\r\n            setText(e.target.value);\r\n        },\r\n        [],\r\n    )\r\n    return(\r\n           <Form style={{marginBottom: 20}}encType=\"multipart/form-data\" onSubmit={onSubmitForm} onChange={onChangeText}>\r\n                <Input.TextArea maxLength={140} style={{marginTop: 20}} placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n                <div>\r\n                    <input type=\"file\" multiple hidden />\r\n                    <Button>이미지 업로드</Button>\r\n                    <Button type=\"primary\" style={{float: 'right'}} isLoading={isAddingPost} htmlType=\"submit\">짹짹</Button>\r\n                \r\n                </div>\r\n                <div>\r\n                    {imagePath.map((v,i)=>\r\n                    {\r\n                        \r\n                            <div key={v} style={{display: 'inline-block'}}>\r\n                                <img src={'https://localhost:3000/' + v} style={{width: '200px'}} alt={v}/>\r\n                                <div>\r\n                                    <Button>제거</Button>\r\n                                </div>\r\n                            </div>\r\n                   \r\n                    })}\r\n                    \r\n                </div>\r\n                </Form>\r\n                );  \r\n            \r\n            }\r\n\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}