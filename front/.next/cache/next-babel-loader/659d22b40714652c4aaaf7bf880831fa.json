{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  user: {}\n};\nexport var LOG_IN = 'LOG_IN'; // name of action\n\nexport var LOG_OUT = 'LOG_OUT';\nexport var loginAction = {\n  //  Action\n  type: LOG_IN,\n  isLoggedIn: true,\n  data: {\n    nickname: '제로초'\n  }\n};\nexport var logoutAction = {\n  type: LOG_OUT,\n  data: {\n    nickname: ''\n  }\n};\n\nvar reducer = function reducer() // reducer\n{\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({\n          isLoggedIn: false\n        }, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/reducers/user.js"],"names":["initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","logoutAction","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAE;AACvBC,EAAAA,UAAU,EAAE,KADW;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAApB;AAMP,OAAO,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,IAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,IAAMC,WAAW,GAAE;AAAE;AACxBC,EAAAA,IAAI,EAAEH,MADgB;AAEtBF,EAAAA,UAAU,EAAE,IAFU;AAItBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAJgB,CAAnB;AAUP,OAAO,IAAMC,YAAY,GAAG;AACxBH,EAAAA,IAAI,EAAEF,OADkB;AAGxBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAHkB,CAArB;;AAUN,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AACnD;AAAA,MADkBC,KAClB,uEAD0BX,YAC1B;AAAA,MADwCY,MACxC;;AACI,UAAOA,MAAM,CAACN,IAAd;AAEK,SAAKH,MAAL;AACG;AACI,iCACOQ,KADP;AAEIV,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEU,MAAM,CAACL;AAHjB;AAKH;;AACL,SAAKH,OAAL;AACI;AACI;AACIH,UAAAA,UAAU,EAAE;AADhB,WAEOU,KAFP;AAIH;;AACJ;AACI;AACI,iCACOA,KADP;AAGH;AAtBV;AA0BH,CA5BA;;AA8BD,eAAeD,OAAf","sourcesContent":["export const initialState ={\r\n    isLoggedIn: false,\r\n    user: {},\r\n\r\n};\r\n\r\nexport const LOG_IN = 'LOG_IN'; // name of action\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const loginAction ={ //  Action\r\n    type: LOG_IN,\r\n    isLoggedIn: true,\r\n\r\n    data: {\r\n        nickname: '제로초',\r\n    }\r\n};\r\n\r\n\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n\r\n    data: {\r\n        nickname: '',\r\n\r\n    }\r\n\r\n}\r\n\r\n const reducer = (state = initialState, action) => // reducer\r\n{\r\n    switch(action.type)\r\n    {\r\n         case LOG_IN:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                };\r\n            }\r\n        case LOG_OUT:\r\n            {\r\n                return{\r\n                    isLoggedIn: false,\r\n                    ...state,\r\n                };\r\n            }\r\n         default:\r\n             {\r\n                 return{\r\n                     ...state,\r\n                 };\r\n             }\r\n                \r\n\r\n    }\r\n};\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}