{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(Signup),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, put, take, delay, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS } from '../reducers/user';\nimport { takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction loginAPI() {\n  return axios.post('/login'); //서버에 요청을 보내는 부분\n}\n\nfunction signUpAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(2000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction Signup() {\n  return _regeneratorRuntime.wrap(function Signup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(100);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 3:\n          _context3.next = 10;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 10;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 5]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, Signup);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogin), fork(watchSignUp), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/sagas/user.js"],"names":["login","Signup","logOut","watchLogin","watchLogOut","watchSignUp","userSaga","all","fork","call","put","take","delay","takeLatest","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","takeEvery","axios","loginAPI","post","signUpAPI","type","console","log"],"mappings":";;;;yBAmBUA,K;;;yBAiBAC,M;;;yBAkBAC,M;;;yBAiBAC,U;;;yBAKAC,W;;;yBAKAC,W;;;yBAQeC,Q;;AAzFzB,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAA+BC,KAA/B,EAAsCC,UAAtC,QAAuD,oBAAvD;AACA,SACIC,MADJ,EACYC,OADZ,EACqBC,cADrB,EACqCC,cADrC,EACqDC,cADrD,EACoEC,eADpE,EACoFC,eADpF,EACoGC,eADpG,EACqHC,eADrH,EACsIC,eADtI,EACuJC,eADvJ,QAEO,kBAFP;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GACA;AACI,SAAOD,KAAK,CAACE,IAAN,CAAW,QAAX,CAAP,CADJ,CAEI;AACH;;AAED,SAASC,SAAT,GACA,CAGC;;AAED,SAAU7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMY,KAAK,CAAC,IAAD,CAAX;;AALJ;AAAA;AAMQ,iBAAMF,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEd;AADA,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWQe,UAAAA,OAAO,CAACC,GAAR;AAXR;AAYQ,iBAAMtB,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEb;AADA,WAAD,CAAT;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUhB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIQ,iBAAMW,KAAK,CAAC,GAAD,CAAX;;AAJR;AAAA;AAKQ,iBAAMF,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEX;AADA,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQY,UAAAA,OAAO,CAACC,GAAR;AAVR;AAWQ,iBAAMtB,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEV;AADA,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAUlB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMQ,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEN;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQO,UAAAA,OAAO,CAACC,GAAR;AATR;AAUQ,iBAAMtB,GAAG,CAAC;AACNoB,YAAAA,IAAI,EAAEP;AADA,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUpB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMU,UAAU,CAACK,cAAD,EAAgBlB,KAAhB,CAAhB;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAUI,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMS,UAAU,CAACS,eAAD,EAAiBpB,MAAjB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMoB,SAAS,CAACJ,eAAD,EAAiBpB,MAAjB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV,iBAAMC,GAAG,CAAC,CAENC,IAAI,CAACL,UAAD,CAFE,EAGNK,IAAI,CAACH,WAAD,CAHE,EAING,IAAI,CAACJ,WAAD,CAJE,CAAD,CAAT;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,fork,call,put,take,delay, takeLatest} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN, LOG_OUT, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_FAILURE,SIGN_UP_REQUEST, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS\r\n} from '../reducers/user';\r\nimport { takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\n\r\nfunction loginAPI()\r\n{\r\n    return axios.post('/login');    \r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\nfunction signUpAPI()\r\n{\r\n    \r\n    \r\n}\r\n\r\nfunction* login()\r\n{\r\n   // yield call(loginAPI);\r\n    try{\r\n    //    yield call(loginAPI);\r\n    yield delay(2000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        })\r\n    }\r\n}\r\nfunction* Signup()\r\n{\r\n    try{\r\n        //    yield call(signUpAPI);\r\n        yield delay(100);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* logOut()\r\n{\r\n    try{\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        })\r\n    }\r\n    catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLogin()\r\n{\r\n  \r\n    yield takeLatest(LOG_IN_REQUEST,login);\r\n}\r\nfunction* watchLogOut()\r\n{\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut)\r\n}\r\n\r\nfunction* watchSignUp()\r\n{\r\n    yield takeEvery(SIGN_UP_REQUEST,Signup)\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga()\r\n{\r\n     yield all([\r\n       \r\n         fork(watchLogin),\r\n         fork(watchSignUp),\r\n         fork(watchLogOut),\r\n     ]);\r\n}"]},"metadata":{},"sourceType":"module"}