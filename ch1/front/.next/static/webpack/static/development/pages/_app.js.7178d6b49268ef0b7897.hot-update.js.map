{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.7178d6b49268ef0b7897.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import {all,fork,call,put,take,delay, takeLatest} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN, LOG_OUT, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_FAILURE,SIGN_UP_REQUEST, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS\r\n} from '../reducers/user';\r\nimport { takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\n\r\nfunction loginAPI()\r\n{\r\n    return axios.post('/login');    \r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n   // yield call(loginAPI);\r\n    try{\r\n    //    yield call(loginAPI);\r\n    yield delay(2000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        })\r\n    }\r\n}\r\nfunction* Signup()\r\n{\r\n    try{\r\n        //    yield call(loginAPI);\r\n        yield delay(100);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* logOut()\r\n{\r\n    try{\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        })\r\n    }\r\n    catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLogin()\r\n{\r\n  \r\n    yield takeLatest(LOG_IN_REQUEST,login);\r\n}\r\nfunction* watchLogOut()\r\n{\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut)\r\n}\r\n\r\nfunction* watchSignUp()\r\n{\r\n    yield takeEvery(SIGN_UP_REQUEST,Signup)\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga()\r\n{\r\n     yield all([\r\n       \r\n         fork(watchLogin),\r\n         fork(watchSignUp),\r\n         fork(watchLogOut)\r\n     ]);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAcA;;;AAiBA;;;AAkBA;;;AAiBA;;;AAKA;;;AAKA;;;AAQA;AACA;AArFA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AANA;AAAA;AAMA;AACA;AADA;AACA;AAPA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AAXA;AAYA;AACA;AADA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AALA;AAAA;AAKA;AACA;AADA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AAWA;AACA;AADA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AATA;AAUA;AACA;AADA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}