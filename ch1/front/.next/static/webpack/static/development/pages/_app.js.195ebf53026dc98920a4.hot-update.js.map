{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.195ebf53026dc98920a4.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import {all,fork,call,put,take,} from 'redux-saga/effects';\r\nimport {LOG_IN,LOG_OUT,LOG_IN_SUCCESS} from '../reducers/user';\r\n\r\n\r\n\r\n\r\nfunction loginAPI()\r\n{\r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e)\r\n    {\r\n        Console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin()\r\n{\r\n    yield takeLatest(LOG_IN,login);\r\n}\r\n\r\nfunction* helloSaga()\r\n{\r\n    console.log(\"hello saga\");\r\n    yield take(helloSaga)\r\n}\r\n\r\n\r\nexport default function* useSaga()\r\n{\r\n    yield all([fork(watchLogin),\r\n        helloSaga(),\r\n    ]);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAYA;;;AAgBA;;;AAKA;;;AAOA;AACA;AAzCA;AACA;AACA;AAIA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAJA;AAAA;AAIA;AACA;AADA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AATA;AAUA;AACA;AADA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}