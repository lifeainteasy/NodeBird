{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NodeBird\\\\ch1\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Form, Button, Card, Icon, Avatar, List, Comment } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    commentAdded\n  } = useSelector(state => state.post);\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n\n    if (!me) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id\n      }\n    });\n  }, [me && me.id]);\n  const onChangeComment = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(() => {\n    setCommentText('');\n  }, [commentAdded == true]);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const dispatch = useDispatch();\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, post.user.nickname[0]),\n    title: post.user.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    required: true,\n    onChange: onChangeComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0}  댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: item => __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(Comment, {\n      author: item.user.nickname,\n      avatar: __jsx(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, item.user.nickname[0]),\n      content: item.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","Input","Form","Button","Card","Icon","Avatar","List","Comment","useSelector","useDispatch","ADD_COMMENT_REQUEST","PostCard","post","me","state","user","commentAdded","onSubmitComment","e","preventDefault","alert","dispatch","type","data","postId","id","onChangeComment","setCommentText","target","value","commentFormOpened","setCommentFormOpened","commentText","onToggleComment","prev","createdAt","img","nickname","content","Comments","length","item"],"mappings":"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","sourcesContent":["import React, { useState ,useCallback,useEffect} from 'react';\r\nimport { Input , Form, Button, Card, Icon, Avatar, List,Comment } from 'antd';\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostCard = ({post}) =>\r\n{\r\n  const {me} = useSelector(state=>state.user)\r\n  const {commentAdded} = useSelector(state=>state.post)\r\n\r\n  const onSubmitComment = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if(!me)\r\n      {\r\n        return    alert(\"로그인이 필요합니다.\")\r\n      }\r\n      \r\n        \r\n      return dispatch({\r\n        type:ADD_COMMENT_REQUEST,\r\n        data:{\r\n          postId: post.id,\r\n        }\r\n      });\r\n      \r\n    },[me&& me.id],\r\n  \r\n  )\r\n  const onChangeComment = useCallback(\r\n    (e) => {\r\n      setCommentText(e.target.value);\r\n    },\r\n    [],\r\n  )\r\n  useEffect(()=>\r\n  {\r\n    setCommentText('');\r\n  },[commentAdded==true])\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const [commentText,setCommentText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleComment = useCallback(()=>\r\n  {\r\n    setCommentFormOpened(prev=>!prev);\r\n  },[]);\r\n    return(                      \r\n      <div>\r\n      <Card\r\n        key={+post.createdAt}\r\n        cover={post.img && <img alt=\"example\" src={post.img} />}\r\n        actions ={[\r\n            <Icon type=\"retweet\" key=\"retweet\" />,\r\n            <Icon type=\"heart\" key=\"heart\" />,\r\n            <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\r\n            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n\r\n        ]}\r\n        extra={<Button>팔로우</Button>}\r\n        >\r\n        <Card.Meta avatar={<Avatar>{post.user.nickname[0]}</Avatar>}\r\n        title={post.user.nickname}\r\n        description={post.content}\r\n        />\r\n        </Card>\r\n        {commentFormOpened && (\r\n          <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Item>\r\n                  <Input.TextArea rows={4} value={commentText} required onChange={onChangeComment} />\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" >삐약</Button>\r\n            </Form>\r\n              <List header = {`${post.Comments ? post.Comments.length : 0}  댓글`}\r\n              itemLayout = \"horizontal\"\r\n              dataSource = {post.Comments || []}\r\n              renderItem={item=>(\r\n                <li>\r\n                  <Comment\r\n                    author={item.user.nickname}\r\n                    avatar={<Avatar>{item.user.nickname[0]}</Avatar>}\r\n                    content={item.content}\r\n                    />\r\n                </li>\r\n              )}\r\n              />\r\n\r\n              </>\r\n        )}\r\n      </div>\r\n);\r\n};\r\n\r\n\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}