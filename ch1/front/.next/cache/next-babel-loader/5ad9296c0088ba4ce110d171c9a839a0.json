{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(Signup),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, put, take, delay, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\nimport { takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction loginAPI() {\n  return axios.post('/login'); //서버에 요청을 보내는 부분\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(100);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction Signup() {\n  return _regeneratorRuntime.wrap(function Signup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(100);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          takeLatest(LOG_IN_REQUEST, login);\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_IN_REQUEST, Signup);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/sagas/user.js"],"names":["login","Signup","watchLogin","watchSignUp","userSaga","all","fork","call","put","take","delay","takeLatest","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","takeEvery","axios","loginAPI","post","type","console","log","SIGN_IN_REQUEST"],"mappings":";;;;yBAcUA,K;;;yBAiBAC,M;;;yBAiBAC,U;;;yBAMAC,W;;;yBAQeC,Q;;AA9DzB,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAA+BC,KAA/B,EAAsCC,UAAtC,QAAuD,oBAAvD;AACA,SACIC,MADJ,EACYC,OADZ,EACqBC,cADrB,EACqCC,cADrC,EACqDC,cADrD,EACoEC,eADpE,EACoFC,eADpF,QAEO,kBAFP;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GACA;AACI,SAAOD,KAAK,CAACE,IAAN,CAAW,QAAX,CAAP,CADJ,CAEI;AACH;;AAGD,SAAUtB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMU,KAAK,CAAC,GAAD,CAAX;;AALJ;AAAA;AAMQ,iBAAMF,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAET;AADA,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWQU,UAAAA,OAAO,CAACC,GAAR;AAXR;AAYQ,iBAAMjB,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAER;AADA,WAAD,CAAT;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUd,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIQ,iBAAMS,KAAK,CAAC,GAAD,CAAX;;AAJR;AAAA;AAKQ,iBAAMF,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAEN;AADA,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQO,UAAAA,OAAO,CAACC,GAAR;AAVR;AAWQ,iBAAMjB,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAEL;AADA,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUhB,UAAV;AAAA;AAAA;AAAA;AAAA;AAGIS,UAAAA,UAAU,CAACK,cAAD,EAAgBhB,KAAhB,CAAV;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMgB,SAAS,CAACO,eAAD,EAAiBzB,MAAjB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV,iBAAMC,GAAG,CAAC,CAENC,IAAI,CAACJ,UAAD,CAFE,EAGNI,IAAI,CAACH,WAAD,CAHE,CAAD,CAAT;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,fork,call,put,take,delay, takeLatest} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN, LOG_OUT, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_FAILURE\r\n} from '../reducers/user';\r\nimport { takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\n\r\nfunction loginAPI()\r\n{\r\n    return axios.post('/login');    \r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n   // yield call(loginAPI);\r\n    try{\r\n    //    yield call(loginAPI);\r\n    yield delay(100);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        })\r\n    }\r\n}\r\nfunction* Signup()\r\n{\r\n    try{\r\n        //    yield call(loginAPI);\r\n        yield delay(100);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.log(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin()\r\n{\r\n  \r\n    takeLatest(LOG_IN_REQUEST,login);\r\n}\r\n\r\nfunction* watchSignUp()\r\n{\r\n    yield takeEvery(SIGN_IN_REQUEST,Signup)\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga()\r\n{\r\n     yield all([\r\n       \r\n         fork(watchLogin),\r\n         fork(watchSignUp),\r\n     ]);\r\n}"]},"metadata":{},"sourceType":"module"}