{"ast":null,"code":"import { all, fork, call, put, take, delay } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, LOG_IN_SUCCESS } from '../reducers/user';\nconst HELLO_SAGA = \"helloSaga\";\n\nfunction loginAPI() {//서버에 요청을 보내는 부분\n}\n\nfunction* login() {\n  try {\n    //    yield call(loginAPI);\n    yield delay(100);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  });\n}\n\nfunction watchSignUp() {}\n\nexport default function* userSaga() {\n  yield all([watchLogin(), watchSignUp()]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/sagas/user.js"],"names":["all","fork","call","put","take","delay","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","login","type","e","console","error","LOG_IN_FAILURE","watchLogin","watchSignUp","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAA+BC,KAA/B,QAA2C,oBAA3C;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,cAAvB,QAA4C,kBAA5C;AAEA,MAAMC,UAAU,GAAI,WAApB;;AAGA,SAASC,QAAT,GACA,CACI;AACH;;AAGD,UAAUC,KAAV,GACA;AACI,MAAG;AACH;AACA,UAAMN,KAAK,CAAC,GAAD,CAAX;AACI,UAAMF,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAMK,CAAN,EACF;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEI;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUC,UAAV,GACA;AACI,QAAMb,IAAI,CAACE,MAAD,CAAV;AACA,QAAMH,GAAG,CAAC;AACNS,IAAAA,IAAI,EAAEJ;AADA,GAAD,CAAT;AAGH;;AAED,SAASU,WAAT,GAEA,CAEC;;AAKD,eAAe,UAAUC,QAAV,GACf;AACK,QAAMnB,GAAG,CAAC,CAENiB,UAAU,EAFJ,EAGNC,WAAW,EAHL,CAAD,CAAT;AAKJ","sourcesContent":["import {all,fork,call,put,take,delay} from 'redux-saga/effects';\r\nimport {LOG_IN,LOG_OUT,LOG_IN_SUCCESS} from '../reducers/user';\r\n\r\nconst HELLO_SAGA  = \"helloSaga\";\r\n\r\n\r\nfunction loginAPI()\r\n{\r\n    //서버에 요청을 보내는 부분\r\n}\r\n\r\n\r\nfunction* login()\r\n{\r\n    try{\r\n    //    yield call(loginAPI);\r\n    yield delay(100);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin()\r\n{\r\n    yield take(LOG_IN);\r\n    yield put({\r\n        type: LOG_IN_SUCCESS,\r\n    });\r\n}\r\n\r\nfunction watchSignUp()\r\n\r\n{\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga()\r\n{\r\n     yield all([\r\n       \r\n         watchLogin(),\r\n         watchSignUp(),\r\n     ]);\r\n}"]},"metadata":{},"sourceType":"module"}