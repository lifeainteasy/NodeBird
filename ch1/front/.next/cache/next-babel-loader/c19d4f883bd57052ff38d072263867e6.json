{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initalState = {\n  isLoggedIn: true,\n  imagePath: [],\n  //미리보기 이미지 경로\n  mainPosts: [{\n    user: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글',\n    img: 'https://wallpapercave.com/wp/wp2195776.jpg'\n  }],\n  addPostErrorReason: false,\n  isAddingPost: false,\n  postAdded: false,\n  addCommentErrorReason: false,\n  isAddingComment: false,\n  CommentAdded: false\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHING_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST';\nexport var LOAD_HASHING_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS';\nexport var LOAD_HASHING_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE';\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\nexport var REMOVE_OMAGE = 'REMOVE_IMAGE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCUESS = 'ADD_COMMENT_SUCUESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nvar ADD_DUMMY = 'ADD_DUMMY';\nvar dummyComment = {\n  user: {\n    id: 1,\n    nickname: \"더미\"\n  },\n  content: \"더미의 댓글\"\n};\nvar addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    user: {\n      nickname: '제로초'\n    }\n  }\n};\nvar dummyPost = {\n  user: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  content: \"저는 더미입니다.\"\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingPost: true,\n        postAdded: false\n      });\n\n    case ADD_POST_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.Comments]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[PostIndex] == _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return {\n          isAddingPost: false\n        };\n      }\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingComment: true,\n        CommentAdded: false\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread({}, state, {\n        isAddingComment: false,\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        CommentAdded: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return {\n          isAddingComment: false\n        };\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/reducers/post.js"],"names":["initalState","isLoggedIn","imagePath","mainPosts","user","id","nickname","content","img","addPostErrorReason","isAddingPost","postAdded","addCommentErrorReason","isAddingComment","CommentAdded","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHING_POSTS_REQUEST","LOAD_HASHING_POSTS_SUCCESS","LOAD_HASHING_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","REMOVE_OMAGE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCUESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_DUMMY","dummyComment","addDummy","type","data","UserId","dummyPost","reducer","state","action","postIndex","findIndex","v","postId","post","Comments","PostIndex","ADD_COMMENT_SUCCESS"],"mappings":"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","sourcesContent":["export const initalState ={\r\n    \r\n        isLoggedIn: true,\r\n        imagePath: [], //미리보기 이미지 경로\r\n        mainPosts: [{\r\n            user:{\r\n                id: 1,\r\n                nickname: '제로초',\r\n            },\r\n            content: '첫 번째 게시글',\r\n            img: 'https://wallpapercave.com/wp/wp2195776.jpg',\r\n    \r\n        }],\r\n        addPostErrorReason: false,\r\n        isAddingPost: false,\r\n        postAdded : false,\r\n\r\n        addCommentErrorReason: false,\r\n        isAddingComment: false,\r\n        CommentAdded : false,\r\n    \r\n};\r\n\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHING_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST';\r\nexport const LOAD_HASHING_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS';\r\nexport const LOAD_HASHING_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE';\r\n\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE';\r\n\r\n\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\r\n\r\nexport const REMOVE_OMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\n\r\nexport const UNLIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCUESS = 'ADD_COMMENT_SUCUESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\nconst ADD_DUMMY = 'ADD_DUMMY';\r\n\r\nconst dummyComment = {\r\n    user: {\r\n        id: 1,\r\n        nickname: \"더미\"\r\n    },\r\n    content: \"더미의 댓글\"\r\n}\r\n const addDummy = {\r\n    type: ADD_DUMMY,\r\n    data: {\r\n        content: 'Hello',\r\n        UserId: 1,\r\n        user: {\r\n            nickname: '제로초',\r\n        },\r\n        \r\n    },\r\n};\r\n\r\n\r\nconst dummyPost = {\r\n    user: \r\n    {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n    },\r\n    content: \"저는 더미입니다.\",\r\n}\r\n\r\n\r\n\r\nconst reducer = (state = initalState, action) =>\r\n{\r\n    switch (action.type)\r\n    {\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                isAddingPost: true,\r\n                postAdded : false,\r\n\r\n            };\r\n\r\n        case ADD_POST_SUCCESS:\r\n            { \r\n                const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId);\r\n                const post = state.mainPosts[postIndex];\r\n                const Comments = [...post.Comments, action.data.Comments];\r\n                const mainPosts = [...state.mainPosts];\r\n                mainPosts[PostIndex] == {...post,Comments};\r\n            return{\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [dummyPost,...state.mainPosts],\r\n                postAdded : true,\r\n            \r\n\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE:\r\n        {\r\n            return{ \r\n                isAddingPost: false,\r\n            }\r\n\r\n        }\r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                isAddingComment: true,\r\n                CommentAdded : false,\r\n\r\n            };\r\n\r\n        case ADD_COMMENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts: [dummyPost,...state.mainPosts],\r\n                CommentAdded : true,\r\n\r\n            }\r\n\r\n        case ADD_COMMENT_FAILURE:\r\n        {\r\n            return{ \r\n                isAddingComment: false,\r\n            }\r\n        }\r\n\r\n            default:\r\n                {\r\n                    return{\r\n                        ...state,\r\n                    }\r\n                }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}