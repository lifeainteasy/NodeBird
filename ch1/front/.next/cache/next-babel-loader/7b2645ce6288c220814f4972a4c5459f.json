{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NodeBird\\\\ch1\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Input, Form, Button, Card, Icon, Avatar, List, Comment } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!me) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id\n      }\n    });\n  }, [me && me.id]);\n  var onChangeComment = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var dispatch = useDispatch();\n  var onToggleComent = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, post.user.nickname[0]),\n    title: post.user.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: \"\".concat(post.Comments ? post.Comments.length : 0, \"  \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(Comment, {\n        author: item.user.nickname,\n        avatar: __jsx(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, item.user.nickname[0]),\n        content: item.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/components/PostCard.js"],"names":["React","useState","useCallback","Input","Form","Button","Card","Icon","Avatar","List","Comment","useSelector","useDispatch","ADD_COMMENT_REQUEST","PostCard","post","state","user","me","onSubmitComment","e","preventDefault","alert","dispatch","type","data","postId","id","onChangeComment","setCommentText","target","value","commentFormOpened","setCommentFormOpened","commentText","onToggleComent","prev","createdAt","img","nickname","content","Comments","length","item"],"mappings":"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","sourcesContent":["import React, { useState ,useCallback} from 'react';\r\nimport { Input , Form, Button, Card, Icon, Avatar, List,Comment } from 'antd';\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostCard = ({post}) =>\r\n{\r\n  const {me} = useSelector(state=>state.user)\r\n\r\n  const onSubmitComment = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if(!me)\r\n      {\r\n        return    alert(\"로그인이 필요합니다.\")\r\n      }\r\n      \r\n        \r\n      return dispatch({\r\n        type:ADD_COMMENT_REQUEST,\r\n        data:{\r\n          postId: post.id,\r\n        }\r\n      });\r\n      \r\n    },[me&& me.id],\r\n  \r\n  )\r\n  const onChangeComment = useCallback(\r\n    (e) => {\r\n      setCommentText(e.target.value);\r\n    },\r\n    [],\r\n  )\r\n\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const [commentText,setCommentText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleComent = useCallback(()=>\r\n  {\r\n    setCommentFormOpened(prev=>!prev);\r\n  },[]);\r\n    return(                      \r\n      <div>\r\n      <Card\r\n        key={+post.createdAt}\r\n        cover={post.img && <img alt=\"example\" src={post.img} />}\r\n        actions ={[\r\n            <Icon type=\"retweet\" key=\"retweet\" />,\r\n            <Icon type=\"heart\" key=\"heart\" />,\r\n            <Icon type=\"message\" key=\"message\" onClick={onToggleComent} />,\r\n            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n\r\n        ]}\r\n        extra={<Button>팔로우</Button>}\r\n        >\r\n        <Card.Meta avatar={<Avatar>{post.user.nickname[0]}</Avatar>}\r\n        title={post.user.nickname}\r\n        description={post.content}\r\n        />\r\n        </Card>\r\n        {commentFormOpened && (\r\n          <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Item>\r\n                  <Input.TextArea rows={4} value={commentText} onChange={onChangeComment} />\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n\r\n            </Form>\r\n              <List header = {`${post.Comments ? post.Comments.length : 0}  댓글`}\r\n              itemLayout = \"horizontal\"\r\n              dataSource = {post.Comment || []}\r\n              renderItem={item=>(\r\n                <li>\r\n                  <Comment\r\n                    author={item.user.nickname}\r\n                    avatar={<Avatar>{item.user.nickname[0]}</Avatar>}\r\n                    content={item.content}\r\n                    />\r\n                </li>\r\n              )}\r\n              />\r\n\r\n              </>\r\n        )}\r\n      </div>\r\n);\r\n};\r\n\r\n\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}