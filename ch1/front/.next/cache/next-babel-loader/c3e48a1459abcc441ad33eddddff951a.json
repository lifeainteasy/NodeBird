{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NodeBird\\\\ch1\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Input, Form, Button, Card, Icon, Avatar, List, Comment } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst PostCard = ({\n  post\n}) => {\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n\n    if (!me) {\n      alert(\"로그인이 필요합니다.\");\n    } else {\n      dispatch({\n        type: ADD_COMMENT_REQUEST\n      });\n    }\n  }, []);\n  const onChangeComment = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onToggleComent = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, post.user.nickname[0]),\n    title: post.user.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0}  댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: item => __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, item.User.nickname[0]),\n      content: item.content,\n      datatime: item.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/user/Desktop/NodeBird/ch1/front/components/PostCard.js"],"names":["React","useState","useCallback","Input","Form","Button","Card","Icon","Avatar","List","Comment","useSelector","useDispatch","ADD_COMMENT_REQUEST","PostCard","post","onSubmitComment","e","preventDefault","me","alert","dispatch","type","onChangeComment","setCommentText","target","value","commentFormOpened","setCommentFormOpened","commentText","state","user","onToggleComent","prev","createdAt","img","nickname","content","Comments","length","item","User"],"mappings":"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","sourcesContent":["import React, { useState ,useCallback} from 'react';\r\nimport { Input , Form, Button, Card, Icon, Avatar, List,Comment } from 'antd';\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostCard = ({post}) =>\r\n{\r\n\r\n  const onSubmitComment = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if(!me)\r\n      {\r\n        alert(\"로그인이 필요합니다.\")\r\n      }\r\n      else{ \r\n      dispatch({\r\n        type:ADD_COMMENT_REQUEST,\r\n      });\r\n      \r\n    }},[],\r\n  \r\n  )\r\n  const onChangeComment = useCallback(\r\n    (e) => {\r\n      setCommentText(e.target.value);\r\n    },\r\n    [],\r\n  )\r\n\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const [commentText,setCommentText] = useState('');\r\n  const {me} = useSelector(state=>state.user);  \r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleComent = useCallback(()=>\r\n  {\r\n    setCommentFormOpened(prev=>!prev);\r\n  },[]);\r\n    return(                      \r\n      <div>\r\n      <Card\r\n        key={+post.createdAt}\r\n        cover={post.img && <img alt=\"example\" src={post.img} />}\r\n        actions ={[\r\n            <Icon type=\"retweet\" key=\"retweet\" />,\r\n            <Icon type=\"heart\" key=\"heart\" />,\r\n            <Icon type=\"message\" key=\"message\" onClick={onToggleComent} />,\r\n            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n\r\n        ]}\r\n        extra={<Button>팔로우</Button>}\r\n        >\r\n        <Card.Meta avatar={<Avatar>{post.user.nickname[0]}</Avatar>}\r\n        title={post.user.nickname}\r\n        description={post.content}\r\n        />\r\n        </Card>\r\n        {commentFormOpened && (\r\n          <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Item>\r\n                  <Input.TextArea rows={4} value={commentText} onChange={onChangeComment} />\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n\r\n            </Form>\r\n              <List header = {`${post.Comments ? post.Comments.length : 0}  댓글`}\r\n              itemLayout = \"horizontal\"\r\n              dataSource = {post.Comment || []}\r\n              renderItem={item=>(\r\n                <li>\r\n                  <Comment\r\n                    author={item.User.nickname}\r\n                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                    content={item.content}\r\n                    datatime={item.createdAt}\r\n                    />\r\n                </li>\r\n              )}\r\n              />\r\n              \r\n              </>\r\n        )}\r\n      </div>\r\n);\r\n};\r\n\r\n\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}